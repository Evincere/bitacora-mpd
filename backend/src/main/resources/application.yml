spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
    group:
      dev:
        - common
        - dev-db
      prod:
        - common
        - prod-db

  # Configuración de desarrollo - NO usar en producción
  main:
    allow-bean-definition-overriding: ${ALLOW_BEAN_OVERRIDING:false}
    allow-circular-references: ${ALLOW_CIRCULAR_REFERENCES:false}

  # Configuración de seguridad
  security:
    # Configuración básica de seguridad
    filter:
      order: -100 # Prioridad alta para los filtros de seguridad

  # Configuración de base de datos común
  jpa:
    open-in-view: false
    properties:
      hibernate:
        "[format_sql]": true
    show-sql: false

  # Configuración de Flyway
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    out-of-order: true

  # Configuración de caché
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=500,expireAfterWrite=300s

  # Configuración de correo electrónico
  mail:
    host: ${MAIL_HOST:localhost}
    port: ${MAIL_PORT:1025}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: ${MAIL_SMTP_AUTH:false}
          starttls:
            enable: ${MAIL_SMTP_STARTTLS:false}

  # Configuración de carga de archivos
  servlet:
    multipart:
      enabled: true
      max-file-size: ${MULTIPART_MAX_FILE_SIZE:15MB}
      max-request-size: ${MULTIPART_MAX_REQUEST_SIZE:20MB}
      file-size-threshold: 2KB

# Configuraciones específicas por perfil
---
spring:
  config:
    activate:
      on-profile: dev

  # Base de datos H2 para desarrollo
  datasource:
    url: jdbc:h2:mem:bitacoradb
    username: sa
    password:
    driver-class-name: org.h2.Driver

  h2:
    console:
      enabled: true
      path: /h2-console

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
    defer-datasource-initialization: false

  sql:
    init:
      mode: never # Deshabilitado para usar solo migraciones Flyway
---
spring:
  config:
    activate:
      on-profile: prod

  # Base de datos PostgreSQL para producción
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:bitacoradb}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api

# Configuración de Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: WHEN_AUTHORIZED
      probes:
        enabled: true
    prometheus:
      enabled: true
  info:
    env:
      enabled: true
    git:
      mode: full
    java:
      enabled: true
    build:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name:bitacora-backend}
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
      slo:
        "[http.server.requests]": 50ms, 100ms, 200ms, 500ms
  tracing:
    enabled: false
    sampling:
      probability: 0.0
    propagation:
      type: w3c

# Configuración de OpenAPI
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
  show-actuator: true

logging:
  level:
    root: ${LOG_LEVEL:INFO}
    "[com.bitacora]": ${APP_LOG_LEVEL:INFO}
    "[org.springframework.web]": ${SPRING_WEB_LOG_LEVEL:WARN}
    "[org.hibernate]": ${HIBERNATE_LOG_LEVEL:ERROR}

# Configuraciones personalizadas de la aplicación
bitacora:
  # Configuración de almacenamiento de archivos
  file:
    storage:
      upload-dir: ${FILE_UPLOAD_DIR:uploads}
      max-file-size: ${FILE_MAX_SIZE:10485760} # 10MB por defecto

  # Configuración de JWT
  jwt:
    secret: ${JWT_SECRET} # REQUERIDO: Debe configurarse como variable de entorno
    expiration: ${JWT_EXPIRATION:86400000}

  # Configuración de CORS
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    exposed-headers: Authorization
    allow-credentials: true
    max-age: 3600
