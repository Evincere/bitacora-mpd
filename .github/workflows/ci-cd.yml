name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: Build and test backend
      run: |
        cd backend
        mvn clean package -DskipTests
        mvn test
    
    - name: Upload backend artifact
      uses: actions/upload-artifact@v3
      with:
        name: backend-jar
        path: backend/target/bitacora-backend-0.0.1-SNAPSHOT.jar
  
  build-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies and build frontend
      run: |
        cd frontend
        npm ci
        npm run build
    
    - name: Upload frontend artifact
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/dist
  
  security-scan:
    runs-on: ubuntu-latest
    needs: [build-and-test-backend]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: Run OWASP Dependency Check
      run: |
        cd backend
        mvn org.owasp:dependency-check-maven:check -DskipProvidedScope=true -DskipTestScope=true
    
    - name: Upload security report
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: backend/target/dependency-check-report.html
  
  docker-build:
    runs-on: ubuntu-latest
    needs: [build-and-test-backend, build-frontend, security-scan]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download backend artifact
      uses: actions/download-artifact@v3
      with:
        name: backend-jar
        path: backend/target
    
    - name: Download frontend artifact
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: frontend/dist
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push backend image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/bitacora-backend:latest
    
    - name: Build and push frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/bitacora-frontend:latest
  
  deploy:
    runs-on: ubuntu-latest
    needs: [docker-build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USERNAME }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          cd /opt/bitacora-mpd
          docker-compose pull
          docker-compose up -d
          docker system prune -af
